package me.samcefalo.sistemaiadbackend.services;import me.samcefalo.sistemaiadbackend.domain.Jogo;import me.samcefalo.sistemaiadbackend.repositories.JogoRepository;import me.samcefalo.sistemaiadbackend.services.exceptions.DataIntegrityException;import me.samcefalo.sistemaiadbackend.services.exceptions.ObjectNotFoundException;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.dao.DataIntegrityViolationException;import org.springframework.stereotype.Service;import java.util.List;@Servicepublic class JogoService {    @Autowired    private JogoRepository jogoRepository;    public Jogo find(int id) {        return jogoRepository.findById(id).orElseThrow(                () -> new ObjectNotFoundException("Objecto não encontrado. ID: " + id + ", Tipo: " + Jogo.class.getName()));    }    public void delete(int id) {        Jogo jogo = find(id);        delete(jogo);    }    public void delete(Jogo jogo) {        try {            jogoRepository.delete(jogo);        } catch (DataIntegrityViolationException e) {            throw new DataIntegrityException("Não é possível excluir uma categoria que possui produtos");        }    }    public List<Jogo> findAll() {        return jogoRepository.findAll();    }}